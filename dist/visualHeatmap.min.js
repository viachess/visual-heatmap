!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).visualHeatmap=e()}(this,(function(){"use strict";const t=t=>"number"==typeof t,e="Wrong parameter type, must be a number",r=t=>void 0===t,o="Parameter is undefined, pass number as a parameter";function a(a){if(r(a))throw new ReferenceError(o);if(!t(a))throw new TypeError(e)}var n="\n\tattribute vec2 a_position;\n\tattribute float a_intensity;\n\tuniform float u_size;\n\tuniform vec2 u_resolution;\n\tuniform vec2 u_translate; \n\tuniform float u_zoom; \n\tuniform float u_angle; \n\tuniform float u_density;\n\tvarying float v_i;\n\n\tvec2 rotation(vec2 v, float a) {\n\t\tfloat s = sin(a); float c = cos(a); mat2 m = mat2(c, -s, s, c); \n\t\treturn m * v;\n\t}\n\n\tvoid main() {\n\t\tvec2 zeroToOne = (a_position * u_density + u_translate * u_density) / (u_resolution);\n\t\tvec2 zeroToTwo = zeroToOne * 2.0 - 1.0;\n\t\tzeroToTwo = zeroToTwo / u_zoom;\n\t\tif (u_angle != 0.0) {\n\t\t\tzeroToTwo = rotation(zeroToTwo, u_angle);\n\t\t}\n\t\tgl_Position = vec4(zeroToTwo , 0, 1);\n\t\tgl_PointSize = u_size * u_density;\n\t\tv_i = a_intensity;\n\t}",i="\n\tprecision mediump float;\n\tuniform float u_max;\n\tuniform float u_blur;\n\tvarying float v_i;\n\tvoid main() {\n\t\tfloat r = 0.0; \n\t\tvec2 cxy = 2.0 * gl_PointCoord - 1.0;\n\t\tr = dot(cxy, cxy);\n\t\tif(r <= 1.0) {\n\t\t\tgl_FragColor = vec4(0, 0, 0, (v_i/u_max) * u_blur * (1.0 - sqrt(r)));\n\t\t}\n\t}",f="\n\tattribute vec2 a_texCoord;\n\tvarying vec2 v_texCoord;\n\tvoid main() {\n\t\tvec2 clipSpace = a_texCoord * 2.0 - 1.0;\n\t\tgl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\n\t\tv_texCoord = a_texCoord;\n\t}",u="\n\tprecision mediump float;\n\tvarying vec2 v_texCoord;\n\tuniform sampler2D u_framebuffer; \n\tuniform vec4 u_colorArr[100]; \n\tuniform float u_colorCount; \n\tuniform float u_offset[100];\n\tuniform float u_opacity; \n\t\n\tfloat remap ( float minval, float maxval, float curval ) {\n\t\treturn ( curval - minval ) / ( maxval - minval );\n\t}\n\n\tvoid main() {\n\t\tfloat alpha = texture2D(u_framebuffer, v_texCoord.xy).a;\n\t\tint matchFound = 0;\n\t\tif (alpha > 0.0 && alpha <= 1.0) {\n\t\t\tvec4 color_;\n\t\t\tif (alpha <= u_offset[0]) {\n\t\t\t\tcolor_ = u_colorArr[0];\n\t\t\t\tmatchFound = 1;\n\t\t\t}\n\n\t\t\tfor (int i=1; i<10; ++i) \n\t\t\t{\n\t\t\t\tif (alpha <= u_offset[i] && matchFound != 1) {\n\t\t\t\t\tcolor_ = mix( u_colorArr[i-1], u_colorArr[i], remap( u_offset[i-1], u_offset[i], alpha ) );\n\t\t\t\t\tmatchFound = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (matchFound != 1) {\n\t\t\t\tcolor_ = vec4(0.0, 0.0, 0.0, 0.0);\n\t\t\t}\n\n\t\t\t// adjust color alpha channel to match config opacity parameter\n\t\t\tcolor_.a = color_.a - (1.0 - u_opacity);\n\n\t\t\tif (color_.a < 0.0) {\n\t\t\t\tcolor_.a = 0.0;\n\t\t\t}\n\t\t\tgl_FragColor = color_;\n\t\t}\n\t}",s="\n\t// attribute float a_offset;\n\n\tuniform vec2 u_resolution;\n\tuniform float u_max;\n\n\tattribute vec2 a_position;\n\tattribute vec2 a_texcoord;\n\t// point value, pressure difference\n\tattribute float a_value;\n\t\n\tvarying vec2 v_texcoord;\n\tvarying float v_offset;\n\t\n\tvoid main() {\n\t\tvec2 zeroToOne = (a_position) / (u_resolution);\n\t\tvec2 zeroToTwo = zeroToOne * 2.0 - 1.0;\n\n\t\tgl_Position = vec4(zeroToTwo , 0, 1);\n\n\t\tv_texcoord = a_texcoord;\n\t\tv_offset = (a_value) / (u_max);\n\t}\n",l="\n\tprecision mediump float;\t\n\n\t// uniform float u_colorCount;\n\tuniform vec4 u_colorArr[100]; \n\tuniform float u_offset[100];\n\n\t// float alpha = texture2D(u_framebuffer, v_texCoord.xy).a;\n\n\tvarying vec2 v_texcoord;\n\tvarying float v_offset;\n\n\tvec4 tl;\n\tvec4 tr;\n\tvec4 bl;\n\tvec4 br;\n\n\tfloat remap ( float minval, float maxval, float curval ) {\n\t\treturn ( curval - minval ) / ( maxval - minval );\n\t}\n\n\tvoid main() {\n\t\tint matchFound = 0;\n\t\tif (v_offset > 0.0 && v_offset <= 1.0) {\n\n\t\t\tif (v_offset <= u_offset[0]) {\n\t\t\t\ttl = u_colorArr[0];\n\t\t\t\ttr = u_colorArr[0];\n\t\t\t\tbl = u_colorArr[0];\n\t\t\t\tbr = u_colorArr[0];\n\t\t\t\tmatchFound = 1;\n\t\t\t}\n\n\t\t\tfor (int i=1; i<10; ++i) \n\t\t\t{\n\t\t\t\tif (v_offset <= u_offset[i] && matchFound != 1) {\n\t\t\t\t\ttl = mix( u_colorArr[i-1], u_colorArr[i], remap( u_offset[i-1], u_offset[i], v_offset ) );\n\t\t\t\t\ttr = mix( u_colorArr[i-1], u_colorArr[i], remap( u_offset[i-1], u_offset[i], v_offset ) );\n\t\t\t\t\tbl = mix( u_colorArr[i-1], u_colorArr[i], remap( u_offset[i-1], u_offset[i], v_offset ) );\n\t\t\t\t\tbr = mix( u_colorArr[i-1], u_colorArr[i], remap( u_offset[i-1], u_offset[i], v_offset ) );\n\t\t\t\t\tmatchFound = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (matchFound != 1) {\n\t\t\t\ttl = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\ttr = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\tbl = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\tbr = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t}\n\t\t}\n\t\tvec4 l = mix(bl, tl, v_texcoord.t);\n\t\tvec4 r = mix(br, tr, v_texcoord.t);\n\t\tvec4 c = mix(l, r, v_texcoord.s);\n\t\tgl_FragColor = c;\n\t}";return function(t,e={}){function r(t,e,r){var o=t.createShader(t[e]);if(t.shaderSource(o,r),t.compileShader(o),!t.getShaderParameter(o,t.COMPILE_STATUS)){var a=t.getShaderInfoLog(o);console.error("*** Error compiling shader '"+o+"':"+a),t.deleteShader(o)}return o}let o,c,h,_,m=[],d=[],g=[],p=0;function v(t,e){const a=document.querySelector(t),c=a.clientHeight,h=a.clientWidth,_=document.createElement("canvas"),m=_.getContext("webgl",{premultipliedAlpha:!1,depth:!1,antialias:!0,alpha:!0,preserveDrawingBuffer:!1});var d;d=m,o=(window.devicePixelRatio||1)/(d.webkitBackingStorePixelRatio||d.mozBackingStorePixelRatio||d.msBackingStorePixelRatio||d.oBackingStorePixelRatio||d.backingStorePixelRatio||1),_.setAttribute("height",c*o),_.setAttribute("width",h*o),_.style.height=`${c}px`,_.style.width=`${h}px`,_.style.position="absolute",a.appendChild(_),this.width=h*o,this.height=c*o,this.containerHTMLElement=a,this.canvas=_,m.clearColor(0,0,0,0),m.enable(m.BLEND),m.blendEquation(m.FUNC_ADD),m.blendFunc(m.ONE,m.ONE_MINUS_SRC_ALPHA),m.depthMask(!0),this.ctx=m,this.gradient=function(t){const e=[],r=t.length,o=[];return t.forEach((function(t){const r=t.color[0],a=t.color[1],n=t.color[2],i=void 0===t.color[3]?1:t.color[3];e.push(r/255),e.push(a/255),e.push(n/255),e.push(i),o.push(t.offset)})),{value:new Float32Array(e),length:r,offset:new Float32Array(o)}}(e.gradient),this.gradShadOP=function(t){var e=r(t,"VERTEX_SHADER",n),o=r(t,"FRAGMENT_SHADER",i),a=t.createProgram();if(t.attachShader(a,e),t.attachShader(a,o),t.linkProgram(a),!t.getProgramParameter(a,t.LINK_STATUS)){var f=t.getProgramInfoLog(a);console.error("Error in program linking:"+f),t.deleteProgram(a)}return{program:a,attr:[{bufferType:t.ARRAY_BUFFER,buffer:t.createBuffer(),drawType:t.STATIC_DRAW,valueType:t.FLOAT,size:2,attribute:t.getAttribLocation(a,"a_position"),data:new Float32Array([])},{bufferType:t.ARRAY_BUFFER,buffer:t.createBuffer(),drawType:t.STATIC_DRAW,valueType:t.FLOAT,size:1,attribute:t.getAttribLocation(a,"a_intensity"),data:new Float32Array([])}],uniform:{u_resolution:t.getUniformLocation(a,"u_resolution"),u_max:t.getUniformLocation(a,"u_max"),u_size:t.getUniformLocation(a,"u_size"),u_blur:t.getUniformLocation(a,"u_blur"),u_translate:t.getUniformLocation(a,"u_translate"),u_zoom:t.getUniformLocation(a,"u_zoom"),u_angle:t.getUniformLocation(a,"u_angle"),u_density:t.getUniformLocation(a,"u_density")}}}(this.ctx),this.colorShadOP=function(t){var e=r(t,"VERTEX_SHADER",f),o=r(t,"FRAGMENT_SHADER",u),a=t.createProgram();if(t.attachShader(a,e),t.attachShader(a,o),t.linkProgram(a),!t.getProgramParameter(a,t.LINK_STATUS)){var n=t.getProgramInfoLog(a);console.error("Error in program linking:"+n),t.deleteProgram(a)}return{program:a,attr:[{bufferType:t.ARRAY_BUFFER,buffer:t.createBuffer(),drawType:t.STATIC_DRAW,valueType:t.FLOAT,size:2,attribute:t.getAttribLocation(a,"a_texCoord"),data:new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1])}],uniform:{u_framebuffer:t.getUniformLocation(a,"u_framebuffer"),u_colorArr:t.getUniformLocation(a,"u_colorArr"),u_colorCount:t.getUniformLocation(a,"u_colorCount"),u_opacity:t.getUniformLocation(a,"u_opacity"),u_offset:t.getUniformLocation(a,"u_offset")}}}(this.ctx),this.rectangleShadOP=function(t){var e=r(t,"VERTEX_SHADER",s),o=r(t,"FRAGMENT_SHADER",l),a=t.createProgram();if(t.attachShader(a,e),t.attachShader(a,o),t.linkProgram(a),!t.getProgramParameter(a,t.LINK_STATUS)){var n=t.getProgramInfoLog(a);console.error("Error in program linking:"+n),t.deleteProgram(a)}return{program:a,attr:[{bufferType:t.ARRAY_BUFFER,buffer:t.createBuffer(),drawType:t.STATIC_DRAW,valueType:t.FLOAT,size:2,attribute:t.getAttribLocation(a,"a_position"),data:new Float32Array([])},{bufferType:t.ARRAY_BUFFER,buffer:t.createBuffer(),drawType:t.STATIC_DRAW,valueType:t.FLOAT,size:1,attribute:t.getAttribLocation(a,"a_value"),data:new Float32Array([])},{bufferType:t.ARRAY_BUFFER,buffer:t.createBuffer(),drawType:t.STATIC_DRAW,valueType:t.FLOAT,size:2,attribute:t.getAttribLocation(a,"a_size"),data:new Float32Array([])},{bufferType:t.ARRAY_BUFFER,buffer:t.createBuffer(),drawType:t.STATIC_DRAW,valueType:t.FLOAT,size:2,attribute:t.getAttribLocation(a,"a_texcoord"),data:new Float32Array([])}],uniform:{u_max:t.getUniformLocation(a,"u_max"),u_colorArr:t.getUniformLocation(a,"u_colorArr"),u_offset:t.getUniformLocation(a,"u_offset"),u_resolution:t.getUniformLocation(a,"u_resolution")}}}(this.ctx),this.frameBufferTextureObject=m.createTexture(),this.frameBufferObject=m.createFramebuffer(),this.size=e.size?e.size:20,this.max=e.max?e.max:1/0,this.blur=e.blur?e.blur:1,this.translate=e.translate&&2===e.translate.length?e.translate:[0,0],this.zoom=e.zoom?e.zoom:1,this.angle=e.rotationAngle?e.rotationAngle:0,this.opacity=e.opacity?e.opacity:1,this.ratio=o,this.rawData=[],m.viewport(0,0,m.canvas.width,m.canvas.height)}function y(t){const e=this.width/(2*o),r=this.height/(2*o);if(t.x-=e,t.y-=r,t.x/=e,t.y/=r,t.x=t.x*this.zoom,t.y=t.y*this.zoom,0!==this.angle){const e=Math.cos(this.angle),r=Math.sin(this.angle),o=t.x,a=t.y;t.x=e*o+-r*a,t.y=r*o+e*a}t.x*=e,t.y*=r,t.x+=e,t.y+=r,t.x-=this.translate[0],t.y-=this.translate[1]}return v.prototype.resize=function(){const t=this.containerHTMLElement.clientHeight,e=this.containerHTMLElement.clientWidth;this.canvas.setAttribute("height",t*o),this.canvas.setAttribute("width",e*o),this.canvas.style.height=`${t}px`,this.canvas.style.width=`${e}px`,this.width=e*o,this.height=t*o,this.ctx.viewport(0,0,this.width,this.height),this.render(this.exData)},v.prototype.clear=function(){this.ctx.clear(this.ctx.COLOR_BUFFER_BIT|this.ctx.DEPTH_BUFFER_BIT)},v.prototype.setMax=function(t){a(t),this.max=t,this.render(this.exData)},v.prototype.setTranslate=function(t){if(!Array.isArray(t)||2!==t.length||!t.every(t=>"number"==typeof t))throw new TypeError("Wrong parameter value, must be an array with two numbers");this.translate=t,this.render(this.exData)},v.prototype.setZoom=function(t){a(t),this.zoom=t,this.render(this.exData)},v.prototype.setRotationAngle=function(t){a(t),this.angle=t,this.render(this.exData)},v.prototype.setSize=function(t){a(t),this.size=t,this.render(this.exData)},v.prototype.setBlur=function(t){a(t),this.blur=t,this.render(this.exData)},v.prototype.setOpacity=function(t){a(t),this.opacity=void 0!==t?t:1,this.render(this.exData)},v.prototype.addData=function(t,e){const r=this;for(let o=0;o<t.length;o++)e&&y.call(r,t[o]),this.rawData.push(t[o]);this.renderData(this.rawData)},v.prototype.renderData=function(t){const e=function(t){const e=t.length;p!==e&&(c=new ArrayBuffer(e*Float32Array.BYTES_PER_ELEMENT*12),m=new Float32Array(c),h=new ArrayBuffer(e*Float32Array.BYTES_PER_ELEMENT*1),d=new Float32Array(h),_=new ArrayBuffer(e*Float32Array.BYTES_PER_ELEMENT*2),g=new Float32Array(_),p=e);for(let r=0;r<e;r++){const e=t[r].xRange,o=-1*(t[r].y/550*2-1),a=t[r].sizeX,n=t[r].sizeY/550<-1?-1:t[r].sizeY/550,i={x:e-a,y:o-n},f={x:e+a,y:o-n},u={x:e-a,y:o+n},s={x:e+a,y:o+n};m[12*r]=i.x,m[12*r+1]=i.y,m[12*r+2]=f.x,m[12*r+3]=f.y,m[12*r+4]=u.x,m[12*r+5]=u.y,m[12*r+6]=u.x,m[12*r+7]=u.y,m[12*r+8]=f.x,m[12*r+9]=f.y,m[12*r+10]=s.x,m[12*r+11]=s.y,d[r]=t[r].value,g[2*r]=t[r].sizeX,g[2*r+1]=t[r].sizeY}return console.log(m),console.log("positionVectorsArray"),{posVec:m,rVec:d,sizeVec:g}}(t);this.rawData=t,this.render(e)},v.prototype.render=function(t){const r=this.ctx;this.exData=t,r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT),"horizontal"===e.type&&(this.rectangleShadOP.attr[0].data=t.posVec,this.rectangleShadOP.attr[1].data=t.rVec,this.rectangleShadOP.attr[2].data=t.sizeVec,this.rectangleShadOP.attr[3].data=new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),r.uniform2fv(this.rectangleShadOP.uniform.u_resolution,new Float32Array([this.width,this.height])),r.uniform4fv(this.rectangleShadOP.uniform.u_colorArr,this.gradient.value),r.uniform1fv(this.rectangleShadOP.uniform.u_offset,this.gradient.offset),r.uniform1f(this.rectangleShadOP.uniform.u_max,this.max),this.rectangleShadOP.attr.forEach((function(t){r.bindBuffer(t.bufferType,t.buffer),r.bufferData(t.bufferType,t.data,t.drawType),r.enableVertexAttribArray(t.attribute),r.vertexAttribPointer(t.attribute,t.size,t.valueType,!0,0,0)})),r.useProgram(this.rectangleShadOP.program),r.drawArrays(r.TRIANGLES,0,6)),"circle"===e.type&&(this.gradShadOP.attr[0].data=t.posVec,this.gradShadOP.attr[1].data=t.rVec,r.useProgram(this.gradShadOP.program),r.uniform2fv(this.gradShadOP.uniform.u_resolution,new Float32Array([this.width,this.height])),r.uniform2fv(this.gradShadOP.uniform.u_translate,new Float32Array([this.translate[0],this.translate[1]])),r.uniform1f(this.gradShadOP.uniform.u_zoom,this.zoom?this.zoom:.01),r.uniform1f(this.gradShadOP.uniform.u_angle,this.angle),r.uniform1f(this.gradShadOP.uniform.u_density,this.ratio),r.uniform1f(this.gradShadOP.uniform.u_max,this.maxValue),r.uniform1f(this.gradShadOP.uniform.u_size,this.size),r.uniform1f(this.gradShadOP.uniform.u_blur,this.blur),this.gradShadOP.attr.forEach((function(t){r.bindBuffer(t.bufferType,t.buffer),r.bufferData(t.bufferType,t.data,t.drawType),r.enableVertexAttribArray(t.attribute),r.vertexAttribPointer(t.attribute,t.size,t.valueType,!0,0,0)})),r.bindTexture(r.TEXTURE_2D,this.frameBufferTextureObject),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,this.width,this.height,0,r.RGBA,r.UNSIGNED_BYTE,null),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR),r.bindFramebuffer(r.FRAMEBUFFER,this.frameBufferObject),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,this.frameBufferTextureObject,0),r.drawArrays(r.POINTS,0,t.posVec.length/2),r.bindFramebuffer(r.FRAMEBUFFER,null),r.useProgram(this.colorShadOP.program),r.uniform4fv(this.colorShadOP.uniform.u_colorArr,this.gradient.value),r.uniform1f(this.colorShadOP.uniform.u_colorCount,this.gradient.length),r.uniform1fv(this.colorShadOP.uniform.u_offset,this.gradient.offset),r.uniform1f(this.colorShadOP.uniform.u_opacity,this.opacity),this.colorShadOP.attr.forEach((function(t){r.bindBuffer(t.bufferType,t.buffer),r.bufferData(t.bufferType,t.data,t.drawType),r.enableVertexAttribArray(t.attribute),r.vertexAttribPointer(t.attribute,t.size,t.valueType,!0,0,0)})),r.uniform1i(this.colorShadOP.uniform.u_framebuffer,0),r.activeTexture(r.TEXTURE0),r.bindTexture(r.TEXTURE_2D,this.frameBufferTextureObject),r.drawArrays(r.TRIANGLES,0,6))},new v(t,e)}}));